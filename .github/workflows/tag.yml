name: Build/Push (tag)

on:
  push:
    tags:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - run: go mod download
      - run: go vet ./...
      - run: go test ./...

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Create release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}

  upload:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        include:
          - os: linux
            arch: 386
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
          - os: freebsd
            arch: 386
          - os: freebsd
            arch: amd64
          - os: windows
            arch: 386
            extension: ".exe"
          - os: windows
            arch: amd64
            extension: ".exe"
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Download go dependencies
        run: go mod download

      - name: Create release (${{ matrix.os }}-${{ matrix.arch }})
        run: CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -a -ldflags '-s -w' -o adguard_exporter-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }} ./

      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}${{ matrix.extension }}
          asset_path: ./adguard_exporter-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: adguard_exporter-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream
